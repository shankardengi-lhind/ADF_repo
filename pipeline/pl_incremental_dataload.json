{
	"name": "pl_incremental_dataload",
	"properties": {
		"activities": [
			{
				"name": "lkp_cdc_json",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_monitor_source",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "sc_count_souce",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "lkp_cdc_json",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_sql_source",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "select count(*) as total_records from @{pipeline().parameters.schema}.@{pipeline().parameters.table} where last_updated > '@{if(empty(pipeline().parameters.back_date),activity('lkp_cdc_json').output.firstRow.cdc_timestamp,pipeline().parameters.back_date)}'",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "if_validate_source",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "sc_count_souce",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('sc_count_souce').output.resultSets[0].rows[0].total_records, 0)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "cp_ingestion_datalake",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{pipeline().parameters.schema}.@{pipeline().parameters.table} where last_updated > '@{if(empty(pipeline().parameters.back_date),activity('lkp_cdc_json').output.firstRow.cdc_timestamp,pipeline().parameters.back_date)}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_sql_source",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_sql_sink",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "sc_get_latest_date",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"additionalColumns": [
										{
											"name": "cdc_timestamp",
											"value": {
												"value": "@activity('sc_get_latest_date').output.resultSets[0].rows[0].latest_date",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_empty_file",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_monitor_source",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "sc_get_latest_date",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "cp_ingestion_datalake",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "ls_sql_source",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "select max(last_updated) as latest_date from @{pipeline().parameters.schema}.@{pipeline().parameters.table}",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"schema": {
				"type": "string",
				"defaultValue": "source"
			},
			"table": {
				"type": "string",
				"defaultValue": "Orders"
			},
			"back_date": {
				"type": "string",
				"defaultValue": "2025-09-26"
			}
		},
		"variables": {
			"test": {
				"type": "String"
			}
		},
		"folder": {
			"name": "poc"
		},
		"annotations": []
	}
}